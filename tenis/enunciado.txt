Tenis

A prefeitura contratou um novo professor para ensinar as crianças do bairro a jogar tênis na quadra de tênis do parque municipal. O professor convidou todas as crianças do bairro interessadas em aprender a jogar tênis. Ao final do primeiro mês de aulas e treinamentos foi organizado um torneio em que cada participante disputou exatamente seis jogos. O professor vai usar o desempenho no torneio para separar as crianças em três grupos, de forma a ter grupos de treino em que os participantes tenham habilidades mais ou menos iguais, usando o seguinte critério:

participantes que venceram todos os jogos serão colocados no Grupo 1;

participantes que venceram 3 ou 4 jogos serão colocados no Grupo 2

participantes que venceram 1 ou 2 jogos serão colocados no Grupo 3

participantes que não venceram nenhum jogo não serão convidados a continuar com os treinamentos.

Dada uma lista com o resultado dos jogos de um participante, escreva um programa para determinar em qual grupo ele será colocado.


Entrada
A entrada consiste N casos de teste que será informado na primeira linha. Para cada caso de teste haverão quinze linhas, cada linha indicando o resultado de um jogo dos participantes entre si. Cada linha contém três numeros: J1 J2 V (entre 1 e 100), sendo J1 o numero do jogador 1; J2, o número do jogador 2; e V o número do jogador vencedor daquela partida (= J1 ou J2).
Saída
Seu programa deve produzir na saída para cada caso de teste, uma linha para cada jogador, em ordem crescente, com o seu número e para qual grupo de treino ele será convidado (1, 2, 3, ou -1 se perder todas).
Regras adicionais de Programação
Para esta atividade existem outras restrições de uso além das usuais do Verde. Isso significa que NÃO BASTA TIRAR 100% NO VERDE !
Se estas restrições abaixo não forem observadas, pontos serão tirados e a atividade pode ser até zerada, ok?
1 - Proibido usar construções do tipo while ( true )
2 - Proibido usar expressões Lambda nos códigos (não sabe o que é isso ? pois é imaginei kkk)
3 - Proibido usar classes prontas, tipo collections, generics e outras facilidades de C#
Usar somente o que foi ensinado em ATP
Entrada:
1
1 2 1
3 4 4
5 6 5
1 3 3
2 4 2
3 5 5
4 6 6
1 4 4
2 3 2
3 6 6
4 5 4
1 5 5
2 5 5
1 6 6
2 6 6
Saída:
1 3
2 3
3 3
4 2
5 2
6 2